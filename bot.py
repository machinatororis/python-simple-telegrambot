import telebot # —ñ–º–ø–æ—Ä—Ç—É–≤–∞–ª–∏ –Ω–∞–±—ñ—Ä —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
from telebot import types # —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫

token = token # —Ç–æ–∫–µ–Ω –±–æ—Ç–∞

alex = telebot.TeleBot(token) # —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ–±'–µ–∫—Ç—É –∫–ª–∞—Å—É TeleBot

keyboard_menu = types.ReplyKeyboardMarkup(resize_keyboard=True) # –∫–∞–∂–µ–º–æ, —â–æ keyboard_menu —Ü–µ –æ–±'—î–∫—Ç –∫–ª–∞–≤—ñ–∞—Ç—É—Ä–∏'
product = types.KeyboardButton("–¢–æ–≤–∞—Ä–∏ üõç")
cart = types.KeyboardButton("–ö–æ—à–∏–∫ üóë")
contacts = types.KeyboardButton("–ö–æ–Ω—Ç–∞–∫—Ç–∏ üìû")
keyboard_menu.add(product, cart, contacts)

@alex.message_handler(commands=['start'])
def start(message):
    alex.send_message(message.chat.id, "–ú–µ–Ω—é:", reply_markup=keyboard_menu)
    new_order = open(f"orders/new_order_{message.chat.id}.txt", "w")
    new_order.close()


@alex.message_handler(content_types=["text"]) # –≤—á–∏–º–æ –ê–ª–µ–∫—Å–∞ –æ–±—Ä–æ–±–ª—è—Ç–∏ —Ç–µ–∫—Å—Ç.–ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
def menu_check(message): # –§—É–Ω–∫—Ü—ñ—è –æ–±—Ä–æ–±–∫–∏
    # —É–º–æ–≤–∏
    if message.text == "hello":
        print(message.chat.id)
        alex.send_message(message.chat.id, "hello")
    if message.text == "–¢–æ–≤–∞—Ä–∏ üõç":
        keyboard_category = types.ReplyKeyboardMarkup(resize_keyboard=True)
        phone = types.KeyboardButton('–¢–µ–ª–µ—Ñ–æ–Ω–∏ üì±')
        tv = types.KeyboardButton('–¢–µ–ª–µ–≤—ñ–∑–æ—Ä–∏ üì∫')
        menu = types.KeyboardButton('üîô –ú–µ–Ω—é')
        keyboard_category.add(phone, tv, menu)
        alex.send_message(message.chat.id, "–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é", reply_markup=keyboard_category)

    if message.text == "–ö–æ—à–∏–∫ üóë":
        file_cart = open(f"orders/new_order_{message.chat.id}.txt", "r")
        cart = file_cart.read().split('\n')
        file_cart.close()
        message_text = ''
        total_price = 0
        for element in cart:
            if element:
                text_parse = element.split(";")
                total_price = total_price + int(text_parse[2].replace(" ", "")) # –¥–æ–¥–∞—î–º–æ –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É
                message_text = message_text + f'{text_parse[0]} - {text_parse[1]}, —Ü—ñ–Ω–∞: {text_parse[2]}\n'
        message_text = message_text + f'–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {total_price}‚Ç¥' # –µ—Å—Ç–µ—Ç–∏—á–Ω–æ –≤–∏–≤–æ–¥–∏–º–æ –¥–∞–Ω—ñ —É —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        orders_keyboard = types.InlineKeyboardMarkup()
        orders_button = types.InlineKeyboardButton(text="–û—Ñ–æ—Ä–º–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="–û—Ñ–æ—Ä–º–∏—Ç–∏")
        orders_keyboard.add(orders_button)
        alex.send_message(message.chat.id, message_text, reply_markup=orders_keyboard)
    if message.text == "üîô –ú–µ–Ω—é":
        alex.send_message(message.chat.id, "–ú–µ–Ω—é:", reply_markup=keyboard_menu)
    if message.text == "–ö–æ–Ω—Ç–∞–∫—Ç–∏ üìû":
        alex.send_message(message.chat.id, "üìç –≤—É–ª–∏—Ü—è –•—Ä–µ—â–∞—Ç–∏–∫, 1\n        –ö–∏—ó–≤, 02000\nüìû +380 67 123 45 67")
    if message.text == "–¢–µ–ª–µ—Ñ–æ–Ω–∏ üì±":
        file_phone = open('phone.txt', "r")
        db_phone = file_phone.read().split('\n')
        file_phone.close()
        phone_keyboard = types.InlineKeyboardMarkup()
        for i in db_phone:
            text_parse = i.split(";")
            button = types.InlineKeyboardButton(text=f'{text_parse[0]} - {text_parse[1]}, —Ü—ñ–Ω–∞: {text_parse[2]}‚Ç¥', callback_data=i)
            phone_keyboard.add(button)
        alex.send_message(message.chat.id, "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç–µ–ª–µ—Ñ–æ–Ω–∏ üì±:", reply_markup=phone_keyboard)
    if message.text == "–¢–µ–ª–µ–≤—ñ–∑–æ—Ä–∏ üì∫":
        file_phone = open('tv.txt', "r")
        db_phone = file_phone.read().split('\n')
        file_phone.close()
        phone_keyboard = types.InlineKeyboardMarkup()
        for i in db_phone:
            text_parse = i.split(";")
            button = types.InlineKeyboardButton(text=f'{text_parse[0]} - {text_parse[1]} –¥—é–π–º—ñ–≤, —Ü—ñ–Ω–∞: {text_parse[2]}‚Ç¥',
                                                callback_data=i)
            phone_keyboard.add(button)
        alex.send_message(message.chat.id, "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è —Ç–µ–ª–µ–≤—ñ–∑–æ—Ä–∏ üì∫:", reply_markup=phone_keyboard)

@alex.callback_query_handler(func=lambda call: True)
def call_data_me(call):
    if call.data:
        if call.data == "–û—Ñ–æ—Ä–º–∏—Ç–∏":
            user_number = alex.send_message(call.message.chat.id, "–ù–∞–ø–∏—à—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —Ç–∞ –Ω–∞—à –º–µ–Ω–µ–¥–∂–µ—Ä –∑–≤'—è–∂–µ—Ç—å—Å—è –∑ –≤–∞–º–∏ –ø—Ä–æ—Ç—è–≥–æ–º –ø'—è—Ç–∏ —Ö–≤–∏–ª–∏–Ω")
            alex.register_next_step_handler(user_number, check_order)
        else:
            new_order = open(f"orders/new_order_{call.message.chat.id}.txt", "a")
            new_order.write(call.data + '\n')
            new_order.close()
            text_parse = call.data.split(";")
            alex.send_message(call.message.chat.id, f'{text_parse[0]} - {text_parse[1]} –¥–æ–¥–∞–Ω–æ –¥–æ –∫–æ—à–∏–∫–∞')

def check_order(message):
    file_cart = open(f"orders/new_order_{message.chat.id}.txt", "r")
    cart = file_cart.read().split('\n')
    file_cart.close()
    message_text = ''
    total_price = 0
    for element in cart:
        if element:
            text_parse = element.split(";")
            total_price = total_price + int(text_parse[2].replace(" ", ""))  # –¥–æ–¥–∞—î–º–æ –¥–æ –∑–∞–≥–∞–ª—å–Ω–æ—ó —Å—É–º–∏ –≤–∞—Ä—Ç—ñ—Å—Ç—å —Ç–æ–≤–∞—Ä—É
            message_text = message_text + f'{text_parse[0]} - {text_parse[1]}, —Ü—ñ–Ω–∞: {text_parse[2]}\n'
    message_text = message_text + f'–ó–∞–≥–∞–ª—å–Ω–∞ —Å—É–º–∞: {total_price}‚Ç¥'  # –µ—Å—Ç–µ—Ç–∏—á–Ω–æ –≤–∏–≤–æ–¥–∏–º–æ –¥–∞–Ω—ñ —É —Ç–µ–∫—Å—Ç –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
    alex.send_message(-4066157954, f'–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.\n{message_text}\n–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {message.text}')

alex.polling(none_stop=True, interval=0) # –≥—Ä–∞—Ñ—ñ–∫ —Ä–æ–±–æ—Ç–∏ –ê–ª–µ–∫—Å–∞
